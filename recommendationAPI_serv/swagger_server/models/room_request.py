# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.facility import Facility  # noqa: F401,E501
from swagger_server.models.flexibility_value import FlexibilityValue  # noqa: F401,E501
from swagger_server.models.optimal_values import OptimalValues  # noqa: F401,E501
from swagger_server.models.room_request_room_size import RoomRequestRoomSize  # noqa: F401,E501
from swagger_server.models.weighted_category import WeightedCategory  # noqa: F401,E501
from swagger_server import util


class RoomRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, date_time_slot_start: datetime=None, date_time_slot_end: datetime=None, room_size: RoomRequestRoomSize=None, weighted_categories: WeightedCategory=None, optimal_values: OptimalValues=None, flexibility_values: FlexibilityValue=None, facility_requirements: List[Facility]=None):  # noqa: E501
        """RoomRequest - a model defined in Swagger

        :param date_time_slot_start: The date_time_slot_start of this RoomRequest.  # noqa: E501
        :type date_time_slot_start: datetime
        :param date_time_slot_end: The date_time_slot_end of this RoomRequest.  # noqa: E501
        :type date_time_slot_end: datetime
        :param room_size: The room_size of this RoomRequest.  # noqa: E501
        :type room_size: RoomRequestRoomSize
        :param weighted_categories: The weighted_categories of this RoomRequest.  # noqa: E501
        :type weighted_categories: WeightedCategory
        :param optimal_values: The optimal_values of this RoomRequest.  # noqa: E501
        :type optimal_values: OptimalValues
        :param flexibility_values: The flexibility_values of this RoomRequest.  # noqa: E501
        :type flexibility_values: FlexibilityValue
        :param facility_requirements: The facility_requirements of this RoomRequest.  # noqa: E501
        :type facility_requirements: List[Facility]
        """
        self.swagger_types = {
            'date_time_slot_start': datetime,
            'date_time_slot_end': datetime,
            'room_size': RoomRequestRoomSize,
            'weighted_categories': WeightedCategory,
            'optimal_values': OptimalValues,
            'flexibility_values': FlexibilityValue,
            'facility_requirements': List[Facility]
        }

        self.attribute_map = {
            'date_time_slot_start': 'dateTimeSlotStart',
            'date_time_slot_end': 'dateTimeSlotEnd',
            'room_size': 'roomSize',
            'weighted_categories': 'weightedCategories',
            'optimal_values': 'optimalValues',
            'flexibility_values': 'flexibilityValues',
            'facility_requirements': 'facilityRequirements'
        }
        self._date_time_slot_start = date_time_slot_start
        self._date_time_slot_end = date_time_slot_end
        self._room_size = room_size
        self._weighted_categories = weighted_categories
        self._optimal_values = optimal_values
        self._flexibility_values = flexibility_values
        self._facility_requirements = facility_requirements

    @classmethod
    def from_dict(cls, dikt) -> 'RoomRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RoomRequest of this RoomRequest.  # noqa: E501
        :rtype: RoomRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_time_slot_start(self) -> datetime:
        """Gets the date_time_slot_start of this RoomRequest.

        The desired date and time slot for room availability start.  # noqa: E501

        :return: The date_time_slot_start of this RoomRequest.
        :rtype: datetime
        """
        return self._date_time_slot_start

    @date_time_slot_start.setter
    def date_time_slot_start(self, date_time_slot_start: datetime):
        """Sets the date_time_slot_start of this RoomRequest.

        The desired date and time slot for room availability start.  # noqa: E501

        :param date_time_slot_start: The date_time_slot_start of this RoomRequest.
        :type date_time_slot_start: datetime
        """

        self._date_time_slot_start = date_time_slot_start

    @property
    def date_time_slot_end(self) -> datetime:
        """Gets the date_time_slot_end of this RoomRequest.

        The desired date and time slot for room availability dateTimeSlotEnd.  # noqa: E501

        :return: The date_time_slot_end of this RoomRequest.
        :rtype: datetime
        """
        return self._date_time_slot_end

    @date_time_slot_end.setter
    def date_time_slot_end(self, date_time_slot_end: datetime):
        """Sets the date_time_slot_end of this RoomRequest.

        The desired date and time slot for room availability dateTimeSlotEnd.  # noqa: E501

        :param date_time_slot_end: The date_time_slot_end of this RoomRequest.
        :type date_time_slot_end: datetime
        """

        self._date_time_slot_end = date_time_slot_end

    @property
    def room_size(self) -> RoomRequestRoomSize:
        """Gets the room_size of this RoomRequest.


        :return: The room_size of this RoomRequest.
        :rtype: RoomRequestRoomSize
        """
        return self._room_size

    @room_size.setter
    def room_size(self, room_size: RoomRequestRoomSize):
        """Sets the room_size of this RoomRequest.


        :param room_size: The room_size of this RoomRequest.
        :type room_size: RoomRequestRoomSize
        """

        self._room_size = room_size

    @property
    def weighted_categories(self) -> WeightedCategory:
        """Gets the weighted_categories of this RoomRequest.


        :return: The weighted_categories of this RoomRequest.
        :rtype: WeightedCategory
        """
        return self._weighted_categories

    @weighted_categories.setter
    def weighted_categories(self, weighted_categories: WeightedCategory):
        """Sets the weighted_categories of this RoomRequest.


        :param weighted_categories: The weighted_categories of this RoomRequest.
        :type weighted_categories: WeightedCategory
        """

        self._weighted_categories = weighted_categories

    @property
    def optimal_values(self) -> OptimalValues:
        """Gets the optimal_values of this RoomRequest.


        :return: The optimal_values of this RoomRequest.
        :rtype: OptimalValues
        """
        return self._optimal_values

    @optimal_values.setter
    def optimal_values(self, optimal_values: OptimalValues):
        """Sets the optimal_values of this RoomRequest.


        :param optimal_values: The optimal_values of this RoomRequest.
        :type optimal_values: OptimalValues
        """

        self._optimal_values = optimal_values

    @property
    def flexibility_values(self) -> FlexibilityValue:
        """Gets the flexibility_values of this RoomRequest.


        :return: The flexibility_values of this RoomRequest.
        :rtype: FlexibilityValue
        """
        return self._flexibility_values

    @flexibility_values.setter
    def flexibility_values(self, flexibility_values: FlexibilityValue):
        """Sets the flexibility_values of this RoomRequest.


        :param flexibility_values: The flexibility_values of this RoomRequest.
        :type flexibility_values: FlexibilityValue
        """

        self._flexibility_values = flexibility_values

    @property
    def facility_requirements(self) -> List[Facility]:
        """Gets the facility_requirements of this RoomRequest.


        :return: The facility_requirements of this RoomRequest.
        :rtype: List[Facility]
        """
        return self._facility_requirements

    @facility_requirements.setter
    def facility_requirements(self, facility_requirements: List[Facility]):
        """Sets the facility_requirements of this RoomRequest.


        :param facility_requirements: The facility_requirements of this RoomRequest.
        :type facility_requirements: List[Facility]
        """

        self._facility_requirements = facility_requirements
