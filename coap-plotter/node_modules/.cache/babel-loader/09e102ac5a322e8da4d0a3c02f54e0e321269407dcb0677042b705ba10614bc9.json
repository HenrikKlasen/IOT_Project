{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henri\\\\Documents\\\\Uni.lu\\\\Semester 5\\\\IOT\\\\Project\\\\IOT_Project\\\\coap-plotter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [timestamps, setTimestamps] = useState([]);\n  const [roomTP, setRoomTP] = useState([]);\n  const [roomLuminosity, setRoomLuminosity] = useState([]);\n  const [roomNoise, setRoomNoise] = useState([]);\n  const chartRefs = {\n    roomTP: useRef(null),\n    roomLuminosity: useRef(null),\n    roomNoise: useRef(null)\n  };\n  useEffect(() => {\n    // Dummy data for testing\n    const dummyTimestamps = ['10:00', '10:01', '10:02', '10:03', '10:04'];\n    const dummyRoomTP = [22.5, 22.6, 22.7, 22.8, 22.9];\n    const dummyRoomLuminosity = [100, 105, 110, 115, 120];\n    const dummyRoomNoise = [30, 32, 31, 33, 34];\n    setTimestamps(dummyTimestamps);\n    setRoomTP(dummyRoomTP);\n    setRoomLuminosity(dummyRoomLuminosity);\n    setRoomNoise(dummyRoomNoise);\n  }, []);\n  useEffect(() => {\n    return () => {\n      // Destroy chart instances when component unmounts\n      if (chartRefs.roomTP.current) chartRefs.roomTP.current.destroy();\n      if (chartRefs.roomLuminosity.current) chartRefs.roomLuminosity.current.destroy();\n      if (chartRefs.roomNoise.current) chartRefs.roomNoise.current.destroy();\n    };\n  }, [chartRefs.roomTP, chartRefs.roomLuminosity, chartRefs.roomNoise]);\n  const roomTPData = {\n    labels: timestamps,\n    datasets: [{\n      label: 'Room Temperature (Celsius)',\n      data: roomTP,\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      borderColor: 'rgba(75,192,192,1)'\n    }]\n  };\n  const roomLuminosityData = {\n    labels: timestamps,\n    datasets: [{\n      label: 'Room Luminosity (Lux)',\n      data: roomLuminosity,\n      fill: false,\n      backgroundColor: 'rgba(255,206,86,0.2)',\n      borderColor: 'rgba(255,206,86,1)'\n    }]\n  };\n  const roomNoiseData = {\n    labels: timestamps,\n    datasets: [{\n      label: 'Room Noise (dB)',\n      data: roomNoise,\n      fill: false,\n      backgroundColor: 'rgba(153,102,255,0.2)',\n      borderColor: 'rgba(153,102,255,1)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time CoAP Data Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        ref: chartRefs.roomTP,\n        data: roomTPData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Luminosity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        ref: chartRefs.roomLuminosity,\n        data: roomLuminosityData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Noise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        ref: chartRefs.roomNoise,\n        data: roomNoiseData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Qm9hj+RqXUosFfYxRBZWIskYwgs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Line","jsxDEV","_jsxDEV","App","_s","timestamps","setTimestamps","roomTP","setRoomTP","roomLuminosity","setRoomLuminosity","roomNoise","setRoomNoise","chartRefs","dummyTimestamps","dummyRoomTP","dummyRoomLuminosity","dummyRoomNoise","current","destroy","roomTPData","labels","datasets","label","data","fill","backgroundColor","borderColor","roomLuminosityData","roomNoiseData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/henri/Documents/Uni.lu/Semester 5/IOT/Project/IOT_Project/coap-plotter/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nfunction App() {\n  const [timestamps, setTimestamps] = useState([]);\n  const [roomTP, setRoomTP] = useState([]);\n  const [roomLuminosity, setRoomLuminosity] = useState([]);\n  const [roomNoise, setRoomNoise] = useState([]);\n\n  const chartRefs = {\n    roomTP: useRef(null),\n    roomLuminosity: useRef(null),\n    roomNoise: useRef(null),\n  };\n\n  useEffect(() => {\n    // Dummy data for testing\n    const dummyTimestamps = ['10:00', '10:01', '10:02', '10:03', '10:04'];\n    const dummyRoomTP = [22.5, 22.6, 22.7, 22.8, 22.9];\n    const dummyRoomLuminosity = [100, 105, 110, 115, 120];\n    const dummyRoomNoise = [30, 32, 31, 33, 34];\n\n    setTimestamps(dummyTimestamps);\n    setRoomTP(dummyRoomTP);\n    setRoomLuminosity(dummyRoomLuminosity);\n    setRoomNoise(dummyRoomNoise);\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      // Destroy chart instances when component unmounts\n      if (chartRefs.roomTP.current) chartRefs.roomTP.current.destroy();\n      if (chartRefs.roomLuminosity.current) chartRefs.roomLuminosity.current.destroy();\n      if (chartRefs.roomNoise.current) chartRefs.roomNoise.current.destroy();\n    };\n  }, [chartRefs.roomTP, chartRefs.roomLuminosity, chartRefs.roomNoise]);\n\n  const roomTPData = {\n    labels: timestamps,\n    datasets: [\n      {\n        label: 'Room Temperature (Celsius)',\n        data: roomTP,\n        fill: false,\n        backgroundColor: 'rgba(75,192,192,0.2)',\n        borderColor: 'rgba(75,192,192,1)',\n      },\n    ],\n  };\n\n  const roomLuminosityData = {\n    labels: timestamps,\n    datasets: [\n      {\n        label: 'Room Luminosity (Lux)',\n        data: roomLuminosity,\n        fill: false,\n        backgroundColor: 'rgba(255,206,86,0.2)',\n        borderColor: 'rgba(255,206,86,1)',\n      },\n    ],\n  };\n\n  const roomNoiseData = {\n    labels: timestamps,\n    datasets: [\n      {\n        label: 'Room Noise (dB)',\n        data: roomNoise,\n        fill: false,\n        backgroundColor: 'rgba(153,102,255,0.2)',\n        borderColor: 'rgba(153,102,255,1)',\n      },\n    ],\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Real-Time CoAP Data Plot</h1>\n      <div>\n        <h2>Room Temperature</h2>\n        <Line ref={chartRefs.roomTP} data={roomTPData} />\n      </div>\n      <div>\n        <h2>Room Luminosity</h2>\n        <Line ref={chartRefs.roomLuminosity} data={roomLuminosityData} />\n      </div>\n      <div>\n        <h2>Room Noise</h2>\n        <Line ref={chartRefs.roomNoise} data={roomNoiseData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}