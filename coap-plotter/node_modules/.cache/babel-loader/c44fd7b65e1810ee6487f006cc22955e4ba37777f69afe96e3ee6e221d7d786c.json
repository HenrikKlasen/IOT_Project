{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henri\\\\Documents\\\\Uni.lu\\\\Semester 5\\\\IOT\\\\Project\\\\IOT_Project\\\\coap-plotter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nfunction App() {\n  _s();\n  const [timestamps, setTimestamps] = useState([]);\n  const [roomTP, setRoomTP] = useState([]);\n  const [roomLuminosity, setRoomLuminosity] = useState([]);\n  const [roomNoise, setRoomNoise] = useState([]);\n  const chartRefs = {\n    roomTP: useRef(null),\n    roomLuminosity: useRef(null),\n    roomNoise: useRef(null)\n  };\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to WebSocket server');\n    });\n    socket.on('data', newData => {\n      console.log('Received data:', newData);\n      setTimestamps(prev => [...prev, newData.timestamp]);\n      setRoomTP(prev => [...prev, newData.roomTP]);\n      setRoomLuminosity(prev => [...prev, newData.roomLuminosity]);\n      setRoomNoise(prev => [...prev, newData.roomNoise]);\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from WebSocket server');\n    });\n    return () => {\n      socket.off('data');\n      socket.off('connect');\n      socket.off('disconnect');\n    };\n  }, []);\n  const roomTPData = {\n    labels: timestamps,\n    datasets: [{\n      label: 'Room Temperature (Celsius)',\n      data: roomTP,\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,0.2)',\n      borderColor: 'rgba(75,192,192,1)'\n    }]\n  };\n  const roomLuminosityData = {\n    labels: timestamps,\n    datasets: [{\n      label: 'Room Luminosity (Lux)',\n      data: roomLuminosity,\n      fill: false,\n      backgroundColor: 'rgba(255,206,86,0.2)',\n      borderColor: 'rgba(255,206,86,1)'\n    }]\n  };\n  const roomNoiseData = {\n    labels: timestamps,\n    datasets: [{\n      label: 'Room Noise (dB)',\n      data: roomNoise,\n      fill: false,\n      backgroundColor: 'rgba(153,102,255,0.2)',\n      borderColor: 'rgba(153,102,255,1)'\n    }]\n  };\n  useEffect(() => {\n    return () => {\n      // Destroy chart instances when component unmounts\n      if (chartRefs.roomTP.current) chartRefs.roomTP.current.destroy();\n      if (chartRefs.roomLuminosity.current) chartRefs.roomLuminosity.current.destroy();\n      if (chartRefs.roomNoise.current) chartRefs.roomNoise.current.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time CoAP Data Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        ref: chartRefs.roomTP,\n        data: roomTPData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Luminosity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        ref: chartRefs.roomLuminosity,\n        data: roomLuminosityData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Noise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        ref: chartRefs.roomNoise,\n        data: roomNoiseData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Qm9hj+RqXUosFfYxRBZWIskYwgs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","Line","jsxDEV","_jsxDEV","socket","App","_s","timestamps","setTimestamps","roomTP","setRoomTP","roomLuminosity","setRoomLuminosity","roomNoise","setRoomNoise","chartRefs","on","console","log","newData","prev","timestamp","off","roomTPData","labels","datasets","label","data","fill","backgroundColor","borderColor","roomLuminosityData","roomNoiseData","current","destroy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/henri/Documents/Uni.lu/Semester 5/IOT/Project/IOT_Project/coap-plotter/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { Line } from 'react-chartjs-2';\n\nconst socket = io('http://localhost:4000');\n\nfunction App() {\n  const [timestamps, setTimestamps] = useState([]);\n  const [roomTP, setRoomTP] = useState([]);\n  const [roomLuminosity, setRoomLuminosity] = useState([]);\n  const [roomNoise, setRoomNoise] = useState([]);\n\n  const chartRefs = {\n    roomTP: useRef(null),\n    roomLuminosity: useRef(null),\n    roomNoise: useRef(null),\n  };\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to WebSocket server');\n    });\n\n    socket.on('data', (newData) => {\n      console.log('Received data:', newData);\n      setTimestamps((prev) => [...prev, newData.timestamp]);\n      setRoomTP((prev) => [...prev, newData.roomTP]);\n      setRoomLuminosity((prev) => [...prev, newData.roomLuminosity]);\n      setRoomNoise((prev) => [...prev, newData.roomNoise]);\n    });\n\n    socket.on('disconnect', () => {\n      console.log('Disconnected from WebSocket server');\n    });\n\n    return () => {\n      socket.off('data');\n      socket.off('connect');\n      socket.off('disconnect');\n    };\n  }, []);\n\n  const roomTPData = {\n    labels: timestamps,\n    datasets: [\n      {\n        label: 'Room Temperature (Celsius)',\n        data: roomTP,\n        fill: false,\n        backgroundColor: 'rgba(75,192,192,0.2)',\n        borderColor: 'rgba(75,192,192,1)',\n      },\n    ],\n  };\n\n  const roomLuminosityData = {\n    labels: timestamps,\n    datasets: [\n      {\n        label: 'Room Luminosity (Lux)',\n        data: roomLuminosity,\n        fill: false,\n        backgroundColor: 'rgba(255,206,86,0.2)',\n        borderColor: 'rgba(255,206,86,1)',\n      },\n    ],\n  };\n\n  const roomNoiseData = {\n    labels: timestamps,\n    datasets: [\n      {\n        label: 'Room Noise (dB)',\n        data: roomNoise,\n        fill: false,\n        backgroundColor: 'rgba(153,102,255,0.2)',\n        borderColor: 'rgba(153,102,255,1)',\n      },\n    ],\n  };\n\n  useEffect(() => {\n    return () => {\n      // Destroy chart instances when component unmounts\n      if (chartRefs.roomTP.current) chartRefs.roomTP.current.destroy();\n      if (chartRefs.roomLuminosity.current) chartRefs.roomLuminosity.current.destroy();\n      if (chartRefs.roomNoise.current) chartRefs.roomNoise.current.destroy();\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Real-Time CoAP Data Plot</h1>\n      <div>\n        <h2>Room Temperature</h2>\n        <Line ref={chartRefs.roomTP} data={roomTPData} />\n      </div>\n      <div>\n        <h2>Room Luminosity</h2>\n        <Line ref={chartRefs.roomLuminosity} data={roomLuminosityData} />\n      </div>\n      <div>\n        <h2>Room Noise</h2>\n        <Line ref={chartRefs.roomNoise} data={roomNoiseData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMiB,SAAS,GAAG;IAChBN,MAAM,EAAEV,MAAM,CAAC,IAAI,CAAC;IACpBY,cAAc,EAAEZ,MAAM,CAAC,IAAI,CAAC;IAC5Bc,SAAS,EAAEd,MAAM,CAAC,IAAI;EACxB,CAAC;EAEDF,SAAS,CAAC,MAAM;IACdO,MAAM,CAACY,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC;IAEFd,MAAM,CAACY,EAAE,CAAC,MAAM,EAAGG,OAAO,IAAK;MAC7BF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,OAAO,CAAC;MACtCX,aAAa,CAAEY,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAACE,SAAS,CAAC,CAAC;MACrDX,SAAS,CAAEU,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAACV,MAAM,CAAC,CAAC;MAC9CG,iBAAiB,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAACR,cAAc,CAAC,CAAC;MAC9DG,YAAY,CAAEM,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAACN,SAAS,CAAC,CAAC;IACtD,CAAC,CAAC;IAEFT,MAAM,CAACY,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACnD,CAAC,CAAC;IAEF,OAAO,MAAM;MACXd,MAAM,CAACkB,GAAG,CAAC,MAAM,CAAC;MAClBlB,MAAM,CAACkB,GAAG,CAAC,SAAS,CAAC;MACrBlB,MAAM,CAACkB,GAAG,CAAC,YAAY,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAG;IACjBC,MAAM,EAAEjB,UAAU;IAClBkB,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,4BAA4B;MACnCC,IAAI,EAAElB,MAAM;MACZmB,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,kBAAkB,GAAG;IACzBP,MAAM,EAAEjB,UAAU;IAClBkB,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,uBAAuB;MAC9BC,IAAI,EAAEhB,cAAc;MACpBiB,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAME,aAAa,GAAG;IACpBR,MAAM,EAAEjB,UAAU;IAClBkB,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,iBAAiB;MACxBC,IAAI,EAAEd,SAAS;MACfe,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,uBAAuB;MACxCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX;MACA,IAAIkB,SAAS,CAACN,MAAM,CAACwB,OAAO,EAAElB,SAAS,CAACN,MAAM,CAACwB,OAAO,CAACC,OAAO,CAAC,CAAC;MAChE,IAAInB,SAAS,CAACJ,cAAc,CAACsB,OAAO,EAAElB,SAAS,CAACJ,cAAc,CAACsB,OAAO,CAACC,OAAO,CAAC,CAAC;MAChF,IAAInB,SAAS,CAACF,SAAS,CAACoB,OAAO,EAAElB,SAAS,CAACF,SAAS,CAACoB,OAAO,CAACC,OAAO,CAAC,CAAC;IACxE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjC,OAAA;MAAAiC,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCrC,OAAA;MAAAiC,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBrC,OAAA,CAACF,IAAI;QAACwC,GAAG,EAAE1B,SAAS,CAACN,MAAO;QAACkB,IAAI,EAAEJ;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACNrC,OAAA;MAAAiC,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBrC,OAAA,CAACF,IAAI;QAACwC,GAAG,EAAE1B,SAAS,CAACJ,cAAe;QAACgB,IAAI,EAAEI;MAAmB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACNrC,OAAA;MAAAiC,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBrC,OAAA,CAACF,IAAI;QAACwC,GAAG,EAAE1B,SAAS,CAACF,SAAU;QAACc,IAAI,EAAEK;MAAc;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClC,EAAA,CArGQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAuGZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}